@startuml
actor "HostInterface"
actor "LedInterface"
boundary "HostInterfaceProxy"
boundary "LedInterfaceProxy"
control "MessagePipe"
control "SystemInitiator"
entity "UsbClassPermission"
entity "KnownDeviceList"
control "ResourceObserver"
entity "PowerResource"
entity "BandwidthResource"
boundary "MemoryInterfaceProxy"
boundary "DeviceInterfaceProxy"
actor "MemoryInterface"
actor "DeviceInterface"

HostInterface-> HostInterfaceProxy: 인터럽트 전달
HostInterfaceProxy-> SystemInitiator: Device Driver와의 통신주소 전달
SystemInitiator -> MessagePipe: 메시지 파이프 생성
SystemInitiator -> MessagePipe: 수용가능 USB 클래스 요청
MessagePipe -> HostInterfaceProxy: 수용가능 USB 클래스 요청
HostInterfaceProxy -> HostInterface: 인터럽트 전달
activate HostInterface
HostInterface -> HostInterfaceProxy: 인터럽트 전달
deactivate HostInterface
HostInterfaceProxy-> MessagePipe: 수용가능 USB 클래스 응답
MessagePipe -> SystemInitiator: 수용가능 USB 클래스 응답
SystemInitiator -> UsbClassPermission: 수용가능 USB 클래스 업데이트
SystemInitiator -> LedInterfaceProxy: 전체 LED 3초간 점멸 요청
LedInterfaceProxy-> LedInterface: 인터럽트 전달
SystemInitiator -> MemoryInterfaceProxy: KnownDevice 정보 요청
MemoryInterfaceProxy -> MemoryInterface: 인터럽트 전달
activate MemoryInterface
MemoryInterface -> MemoryInterfaceProxy: 인터럽트 전달
deactivate MemoryInterface
MemoryInterfaceProxy -> SystemInitiator: KnownDevice 정보 전달
SystemInitiator -> KnownDeviceList: KnownDevice 정보 저장
SystemInitiator -> ResourceObserver: 리소스 모니터링 요청

loop 10ms
    ResourceObserver -> DeviceInterfaceProxy: 가용자원 요청
    DeviceInterfaceProxy-> DeviceInterface: 인터럽트 전달
    activate DeviceInterface
    DeviceInterface-> DeviceInterfaceProxy: 인터럽트 전달
    deactivate DeviceInterface
    DeviceInterfaceProxy-> ResourceObserver: 가용자원 전달
    ResourceObserver -> PowerResource: 업데이트
    ResourceObserver -> BandwidthResource: 업데이트
end
@enduml