@startuml
actor "HostInterface"
boundary "HostInterfaceProxy"
control "StreamPipe"
entity "DirectConnectedDevice"
entity "IndirectConnectedDevice"
boundary "LedInterfaceProxy"
boundary "DeviceInterfaceProxy"
actor "LedInterface"
actor "DeviceInterface"

HostInterface -> HostInterfaceProxy: 인터럽트 전달
HostInterfaceProxy -> StreamPipe: 디바이스 읽기 요청

alt 루트 허브에 연결된 디바이스 여부
    StreamPipe -> DirectConnectedDevice: 상태 변경
else NO
    StreamPipe -> IndirectConnectedDevice: 상태 변경
end

StreamPipe -> DeviceInterfaceProxy: 데이터 읽기 요청
DeviceInterfaceProxy-> DeviceInterface: 인터럽트 전달

loop 꽉 차지 않은 패킷을 수신할 때까지
    loop 버킷이 꽉찰때 까지
        DeviceInterface -> StreamPipe: 버퍼에 데이터 쓰기
        StreamPipe -> LedInterfaceProxy: 데이터 레이트 전달
        LedInterfaceProxy -> LedInterface: 인터럽트 전달
     end

     StreamPipe -> HostInterfaceProxy: 읽을 데이터가 있음을 통보
     HostInterfaceProxy -> HostInterface: 인터럽트 전달
     StreamPipe -> StreamPipe: 버킷 비우기
end

StreamPipe -> LedInterfaceProxy: 점멸 해제 요청
LedInterfaceProxy -> LedInterface: 인터럽트 전달

alt 버킷에 데이터가 남아있으면
    StreamPipe -> HostInterfaceProxy: 읽을 데이터가 있음을 통보
    HostInterfaceProxy -> HostInterface: 인터럽트 전달
    StreamPipe -> StreamPipe: 버킷 비우기
end

alt 루트 허브에 연결된 디바이스 여부
    StreamPipe -> DirectConnectedDevice: 상태 변경
else NO
    StreamPipe -> IndirectConnectedDevice: 상태 변경
end
@enduml